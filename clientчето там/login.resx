<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>